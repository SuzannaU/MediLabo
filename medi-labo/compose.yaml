
services:
  # This service will only be used to build images for the other services. It will not start un running container.
  medilabo-builder:
    container_name: medilabo-builder
    build:
      context: .
      dockerfile: Dockerfile
    image: medilabo-builder:latest

  registry-service:
    container_name: registry-service
    build:
      context: .
      dockerfile: registry-service/Dockerfile
    networks:
      - internal-network
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8761/eureka/" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  gateway-service:
    container_name: gateway-service
    build:
      context: .
      dockerfile: gateway-service/Dockerfile
    environment:
      - EUREKA_HOST=registry-service
    depends_on:
      registry-service:
        condition: service_healthy
    networks:
      - internal-network

  patients-service:
    container_name: patients-service
    build:
      context: .
      dockerfile: patients-service/Dockerfile
    environment:
      - EUREKA_HOST=registry-service
    depends_on:
      registry-service:
        condition: service_healthy
      gateway-service:
        condition: service_started
    networks:
      - internal-network

  notes-service:
    container_name: notes-service
    build:
      context: .
      dockerfile: notes-service/Dockerfile
    environment:
      - EUREKA_HOST=registry-service
      - MONGO_HOST=host.docker.internal
      - MONGO_PORT=27017
    depends_on:
      registry-service:
        condition: service_healthy
      gateway-service:
        condition: service_started
    networks:
      - internal-network

  risks-service:
    container_name: risks-service
    build:
      context: .
      dockerfile: risks-service/Dockerfile
    environment:
      - EUREKA_HOST=registry-service
    depends_on:
      registry-service:
        condition: service_healthy
      gateway-service:
        condition: service_started
      patients-service:
        condition: service_started
      notes-service:
        condition: service_started
    networks:
      - internal-network

  front-service:
    container_name: front-service
    build:
      context: .
      dockerfile: front-service/Dockerfile
    environment:
      - EUREKA_HOST=registry-service
    depends_on:
      registry-service:
        condition: service_healthy
      gateway-service:
        condition: service_started
      patients-service:
        condition: service_started
      notes-service:
        condition: service_started
      risks-service:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - internal-network

networks:
  internal-network:
    driver: bridge